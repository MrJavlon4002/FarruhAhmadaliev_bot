import pandas as pd
import os
from telegram import InlineKeyboardButton, InlineKeyboardMarkup, Update, KeyboardButton, ReplyKeyboardMarkup
from telegram.ext import (
    ApplicationBuilder, CommandHandler, MessageHandler, ConversationHandler, CallbackQueryHandler, filters
)

# Define states for the conversation
LANGUAGE, NAME, CONTACT, REASON = range(4)

token = "7972827522:AAEAN2s_f8PmAGDx2QJtNgHaaF5F-c3yF0U"

# Store user data
user_data = {}

# Start command handler
async def start(update: Update, context):
    user = update.message.from_user
    welcome_message = (
        "Assalomu aleykum, bu Farruh Akhmadalievning shaxsiy boti, bu orqali siz muallif bilan bog‚Äôlanish, "
        "mavjud loyhalarga yozilish yoki fikrlaringizni yetkansangiz bo‚Äôladi\n\n"
        "–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, —ç—Ç–æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã–π –±–æ—Ç –§–∞—Ä—Ä—É—Ö–∞ –ê—Ö–º–∞–¥–∞–ª–∏–µ–≤–∞, —á–µ—Ä–µ–∑ –∫–æ—Ç–æ—Ä—ã–π –≤—ã –º–æ–∂–µ—Ç–µ —Å–≤—è–∑–∞—Ç—å—Å—è —Å –∞–≤—Ç–æ—Ä–æ–º, "
        "–∑–∞–ø–∏—Å–∞—Ç—å—Å—è –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫—É—Ä—Å—ã –∏–ª–∏ –ø–æ–¥–µ–ª–∏—Ç—å—Å—è —Å–≤–æ–∏–º–∏ –º—ã—Å–ª—è–º–∏."
    )
    
    keyboard = [[InlineKeyboardButton("\ud83c\uddfa\ud83c\uddff Uz", callback_data="uz"), InlineKeyboardButton("\ud83c\uddf7\ud83c\uddfa Ru", callback_data="ru")]]
    reply_markup = InlineKeyboardMarkup(keyboard)
    
    await update.message.reply_text(welcome_message + "\n\nIltimos, tilni tanlang / –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫:", reply_markup=reply_markup)
    return LANGUAGE

# Language selection handler
async def language(update: Update, context):
    query = update.callback_query
    await query.answer()
    lang = query.data
    user_data[query.from_user.id] = {"language": lang}
    
    if lang == "uz":
        await query.edit_message_text("Ismingiz nima?")
    else:
        await query.edit_message_text("–ö–∞–∫ –≤–∞—Å –∑–æ–≤—É—Ç?")
    
    return NAME

# Name handler
async def name(update: Update, context):
    user_id = update.message.from_user.id
    user_data[user_id]["name"] = update.message.text
    
    lang = user_data[user_id]["language"]
    keyboard = [[KeyboardButton("üìû Kontaktni ulashish" if lang == "uz" else "üìû –ü–æ–¥–µ–ª–∏—Ç—å—Å—è –∫–æ–Ω—Ç–∞–∫—Ç–æ–º", request_contact=True)]]
    reply_markup = ReplyKeyboardMarkup(keyboard, one_time_keyboard=True, resize_keyboard=True)
    
    if lang == "uz":
        await update.message.reply_text("Iltimos, kontakt ma‚Äôlumotlaringizni yuboring:", reply_markup=reply_markup)
    else:
        await update.message.reply_text("–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ—Ç–ø—Ä–∞–≤—å—Ç–µ –≤–∞—à –∫–æ–Ω—Ç–∞–∫—Ç:", reply_markup=reply_markup)
    
    return CONTACT

# Contact handler
async def contact(update: Update, context):
    user_id = update.message.from_user.id
    user_data[user_id]["contact"] = update.message.contact.phone_number
    
    lang = user_data[user_id]["language"]
    if lang == "uz":
        await update.message.reply_text("Loyhaga qiziqishingizga nima sabab bo‚Äôldi?")
    else:
        await update.message.reply_text("–ß—Ç–æ –∑–∞—Å—Ç–∞–≤–∏–ª–æ –≤–∞—Å –∑–∞–∏–Ω—Ç–µ—Ä–µ—Å–æ–≤–∞—Ç—å—Å—è —ç—Ç–∏–º –∫—É—Ä—Å–æ–º?")
    
    return REASON

# Reason handler with Excel saving
async def reason(update: Update, context):
    user_id = update.message.from_user.id
    user_info = user_data[user_id]
    user_info["reason"] = update.message.text

    # Save data to Excel
    file_path = "user_data.xlsx"
    if os.path.exists(file_path):
        df = pd.read_excel(file_path)
    else:
        df = pd.DataFrame(columns=["User ID", "Language", "Name", "Contact", "Reason"])
    
    new_data = pd.DataFrame([{ "User ID": user_id, "Language": user_info["language"], "Name": user_info["name"], "Contact": str(user_info["contact"]), "Reason": user_info["reason"] }])
    df = pd.concat([df, new_data], ignore_index=True)
    df.to_excel(file_path, index=False)

    lang = user_info["language"]

    video_path = "moves.mp4"

    post = (
        """
üéØ TREYDING BO‚ÄòYICHA LOYIHA ‚Äî 10 OYLIK TO‚ÄòLIQ DASTUR  

üìÜ 5 oy ta‚Äôlim + 5 oy savdo amaliyoti  
üìö Video materiallar + PDF + Telegram hamjamiyat  
üîê Bir martalik to‚Äòlov ‚Äî cheksiz kirish

---

Assalomu alaykum!  
Bu loyiha ‚Äî *treydingni mutlaqo noldan boshlab*, strategiya tuzish va real bozor amaliyotigacha olib boradigan **10 oylik tizimli yo‚Äòl xaritasi**.

---

üìò Dastur ikki bosqichdan iborat:  
1Ô∏è‚É£ **Ta‚Äôlim (5 oy):**  
‚Ä¢ Asosiy tushunchalar, MT4 platformasi  
‚Ä¢ Trend, daraja, TVX, texnik tahlil  
‚Ä¢ 4 ta strategiya: Trend Box, Scalping, Round Numbers, Darvos  
‚Ä¢ Savdo rejalari, kundalik yuritish

2Ô∏è‚É£ **Amaliyot (5 oy):**  
‚úÖ Telegram guruhda haftalik tahlil  
‚úÖ Mentorlik, topshiriqlar, feedback  
‚úÖ Guruh ichida savdo qilgan holda tajriba to‚Äòplash  
‚úÖ Mualliflik indikatorlari bilan ishlash

---

üéì Loyiha natijasida siz:  
‚Ä¢ Mustahkam bilim olasiz  
‚Ä¢ O‚Äòz strategiyangizni yaratib, real savdoga chiqasiz  
‚Ä¢ Hamjamiyatda savdo qilish tajribasini orttirasiz

üì© Batafsil ma‚Äôlumot: @username
"""

    ) if lang == "uz" else (
        """
üéØ –¢–†–ï–ô–î–ò–ù–ì-–ü–†–û–ï–ö–¢ –ù–ê 10 –ú–ï–°–Ø–¶–ï–í ‚Äî –° –ù–£–õ–Ø –î–û –†–ï–ó–£–õ–¨–¢–ê–¢–ê  

üìÜ 5 –º–µ—Å—è—Ü–µ–≤ –æ–±—É—á–µ–Ω–∏—è + 5 –º–µ—Å—è—Ü–µ–≤ —Ç–æ—Ä–≥–æ–≤–ª–∏  
üìö –í–∏–¥–µ–æ + PDF + Telegram-—Å–æ–æ–±—â–µ—Å—Ç–≤–æ  
üîê –û–¥–∏–Ω –ø–ª–∞—Ç—ë–∂ ‚Äî –±–µ—Å—Å—Ä–æ—á–Ω—ã–π –¥–æ—Å—Ç—É–ø

---

–ü—Ä–∏–≤–µ—Ç!  
–≠—Ç–æ—Ç –ø—Ä–æ–µ–∫—Ç ‚Äî —ç—Ç–æ **–ø–æ–ª–Ω–æ—Ü–µ–Ω–Ω—ã–π –ø—É—Ç—å –¥–ª–∏–Ω–æ–π –≤ 10 –º–µ—Å—è—Ü–µ–≤**: –æ—Ç —Ç–µ–æ—Ä–∏–∏ –∏ —Å—Ç—Ä–∞—Ç–µ–≥–∏–π –¥–æ —Ä–µ–∞–ª—å–Ω–æ–π —Ç–æ—Ä–≥–æ–≤–ª–∏ –≤ —Å–æ–æ–±—â–µ—Å—Ç–≤–µ.

---

üìò –°—Ç—Ä—É–∫—Ç—É—Ä–∞ –ø—Ä–æ–µ–∫—Ç–∞:  
1Ô∏è‚É£ **–û–±—É—á–µ–Ω–∏–µ (5 –º–µ—Å—è—Ü–µ–≤):**  
‚Ä¢ –û—Å–Ω–æ–≤—ã —Ç—Ä–µ–π–¥–∏–Ω–≥–∞, –ø–ª–∞—Ç—Ñ–æ—Ä–º–∞ MT4  
‚Ä¢ –¢–µ—Ö–∞–Ω–∞–ª–∏–∑, —Ç—Ä–µ–Ω–¥—ã, —É—Ä–æ–≤–Ω–∏, —Ç–æ—á–∫–∏ –≤—Ö–æ–¥–∞  
‚Ä¢ 4 —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏: Trend Box, Scalping, Round Numbers, Darvas  
‚Ä¢ –ü–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ, —Ç—Ä–µ–π–¥–µ—Ä—Å–∫–∏–π –¥–Ω–µ–≤–Ω–∏–∫

2Ô∏è‚É£ **–ü—Ä–∞–∫—Ç–∏–∫–∞ (5 –º–µ—Å—è—Ü–µ–≤):**  
‚úÖ –¢–æ—Ä–≥–æ–≤–ª—è –≤ Telegram-–≥—Ä—É–ø–ø–µ  
‚úÖ –ï–∂–µ–Ω–µ–¥–µ–ª—å–Ω—ã–π –∞–Ω–∞–ª–∏–∑ –∏ –ø–æ–¥–¥–µ—Ä–∂–∫–∞  
‚úÖ –ê–≤—Ç–æ—Ä—Å–∫–∏–µ –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä—ã –∏ —Å–∏–≥–Ω–∞–ª—ã  
‚úÖ –ú–µ–Ω—Ç–æ—Ä—Å—Ç–≤–æ –∏ –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å

---

üéì –ß—Ç–æ –ø–æ–ª—É—á–∏—Ç–µ:  
‚Ä¢ –ü—Ä–æ—á–Ω—ã–µ –∑–Ω–∞–Ω–∏—è –∏ –ª–∏—á–Ω–∞—è —Å—Ç—Ä–∞—Ç–µ–≥–∏—è  
‚Ä¢ –û–ø—ã—Ç —Ç–æ—Ä–≥–æ–≤–ª–∏ —Å –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º  
‚Ä¢ –£–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∞ —Ä–µ–∞–ª—å–Ω–æ–º —Ä—ã–Ω–∫–µ

üì© –ü–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏: @username
"""


    )

    keyboard = [[InlineKeyboardButton("Loyhaga qo'shilish" if lang == "uz" else "–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫—É—Ä—Å—É", url="https://t.me/+mY2YxrLP5WM4Yjdi")]]
    reply_markup = InlineKeyboardMarkup(keyboard)

    # Send video with caption and inline button
    await update.message.reply_video(video=open(video_path, "rb"), caption=post, parse_mode="Markdown", reply_markup=reply_markup)

    return ConversationHandler.END



async def cancel(update: Update, context):
    await update.message.reply_text("Bekor qilindi / –û—Ç–º–µ–Ω–µ–Ω–æ")
    return ConversationHandler.END


# Main function to run the bot
def main():
    app = ApplicationBuilder().token(token).build()
    
    conv_handler = ConversationHandler(
        entry_points=[CommandHandler("start", start)],
        states={
            LANGUAGE: [CallbackQueryHandler(language)],
            NAME: [MessageHandler(filters.TEXT & ~filters.COMMAND, name)],
            CONTACT: [MessageHandler(filters.CONTACT, contact)],
            REASON: [MessageHandler(filters.TEXT & ~filters.COMMAND, reason)],
        },
        fallbacks=[CommandHandler("cancel", cancel)],
    )
    
    app.add_handler(conv_handler)
    app.run_polling()

if __name__ == "__main__":
    main()
